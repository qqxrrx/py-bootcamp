Tuple
  > ordered collection or grouping of items
  > like a list BUT using (...)
  > like a list BUT it is immutable (read-only values)
  > faster than lists
  > safe code because values are read-only (immutable)
  > a valid key in a dictionary (example: tuple of coordinates as key and location as value)
  > can use tuple() function
  > use square brackets for data access, only use (...) for creation
  > useful if you want to store values that should not be changed (like english name of months)
  > has the same index access as lists (slices)


Sets
  > unordered collection of data with NO duplicates
  > can't access items in a set by index
  > declared using {...} only values and NO keys
  > removes duplicates
  > cannot store lists or sets


Set Comprehension
  > similar to Dictionary Comprehension BUT NO key:value

    { <what to do with iterator> for <iterator> in <iterable> }

    { <what to do with iterator respecting the condition> for <iterator> in <iterable> if <condition> }

    { <what to do with iterator with condition> for <iterator> in <iterable> }